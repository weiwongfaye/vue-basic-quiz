{"remainingRequest":"/Users/jackw/work/temp/vue/quiz/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jackw/work/temp/vue/quiz/src/components/QuestionBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jackw/work/temp/vue/quiz/src/components/QuestionBox.vue","mtime":1576047602261},{"path":"/Users/jackw/work/temp/vue/quiz/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jackw/work/temp/vue/quiz/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jackw/work/temp/vue/quiz/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jackw/work/temp/vue/quiz/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBfIGZyb20gJ2xvZGFzaCcKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICBjdXJyZW50UXVlc3Rpb246IE9iamVjdCwKICAgIG5leHQ6IEZ1bmN0aW9uLAogICAgaW5jcmVtZW50OiBGdW5jdGlvbiwKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzZWxlY3RlZEluZGV4OiBudWxsLAogICAgICBjb3JyZWN0SW5kZXg6IG51bGwsCiAgICAgIHNodWZmbGVkQW5zd2VyczogW10sCiAgICAgIGFuc3dlcmVkOiBmYWxzZQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGFuc3dlcnMoKSB7CiAgICAgIGxldCBhbnN3ZXJzID0gWy4uLnRoaXMuY3VycmVudFF1ZXN0aW9uLmluY29ycmVjdF9hbnN3ZXJzXQogICAgICBhbnN3ZXJzLnB1c2godGhpcy5jdXJyZW50UXVlc3Rpb24uY29ycmVjdF9hbnN3ZXIpCiAgICAgIHJldHVybiBhbnN3ZXJzCiAgICB9CiAgfSwKICB3YXRjaDogewogICAgY3VycmVudFF1ZXN0aW9uOiB7CiAgICAgIGltbWVkaWF0ZTogdHJ1ZSwKICAgICAgaGFuZGxlcigpewogICAgICAgIHRoaXMuc2VsZWN0ZWRJbmRleCA9IG51bGwKICAgICAgICB0aGlzLmFuc3dlcmVkID0gZmFsc2UKICAgICAgICB0aGlzLnNodWZmbGVBbnN3ZXJzKCkKICAgICAgfQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgc2VsZWN0QW5zd2VyKGluZGV4KSB7CiAgICAgIHRoaXMuc2VsZWN0ZWRJbmRleCA9IGluZGV4CiAgICAgIGNvbnNvbGUubG9nKGluZGV4KQogICAgfSwKICAgIHNodWZmbGVBbnN3ZXJzKCkgewogICAgICBsZXQgYW5zd2VycyA9IFsuLi50aGlzLmN1cnJlbnRRdWVzdGlvbi5pbmNvcnJlY3RfYW5zd2VycywgdGhpcy5jdXJyZW50UXVlc3Rpb24uY29ycmVjdF9hbnN3ZXJdCiAgICAgIHRoaXMuc2h1ZmZsZWRBbnN3ZXJzID0gXy5zaHVmZmxlKGFuc3dlcnMpCiAgICAgIHRoaXMuY29ycmVjdEluZGV4ID0gdGhpcy5zaHVmZmxlZEFuc3dlcnMuaW5kZXhPZih0aGlzLmN1cnJlbnRRdWVzdGlvbi5jb3JyZWN0X2Fuc3dlcikKICAgIH0sCiAgICBzdWJtaXRBbnN3ZXIoKXsKICAgICAgbGV0IGlzQ29ycmVjdCA9IGZhbHNlCiAgICAgIGNvbnNvbGUubG9nKHRoaXMuY3VycmVudFF1ZXN0aW9uLmNvcnJlY3RfYW5zd2VyKQogICAgICBpZih0aGlzLnNlbGVjdGVkSW5kZXggPT09IHRoaXMuY29ycmVjdEluZGV4KXsKICAgICAgICBpc0NvcnJlY3QgPSB0cnVlCiAgICAgIH0KICAgICAgdGhpcy5hbnN3ZXJlZCA9IHRydWUKICAgICAgY29uc29sZS5sb2coaXNDb3JyZWN0KQogICAgICB0aGlzLmluY3JlbWVudChpc0NvcnJlY3QpCiAgICB9LAogICAgYW5zd2VyQ2xhc3MoaW5kZXgpewogICAgICBsZXQgYW5zd2VyQ2xhc3MgPSAnJwogICAgICBpZiAoIXRoaXMuYW5zd2VyZWQgJiYgdGhpcy5zZWxlY3RlZEluZGV4ID09PSBpbmRleCl7CiAgICAgICAgYW5zd2VyQ2xhc3MgPSAnc2VsZWN0ZWQnCiAgICAgIH0gZWxzZSBpZiAodGhpcy5hbnN3ZXJlZCAmJiB0aGlzLmNvcnJlY3RJbmRleCA9PT0gaW5kZXgpIHsKICAgICAgICBhbnN3ZXJDbGFzcyA9ICdjb3JyZWN0JwogICAgICB9IGVsc2UgaWYgKHRoaXMuYW5zd2VyZWQgJiYgdGhpcy5zZWxlY3RlZEluZGV4ID09PSBpbmRleCAmJiB0aGlzLmNvcnJlY3RJbmRleCAhPT0gaW5kZXgpIHsKICAgICAgICBhbnN3ZXJDbGFzcyA9ICdpbmNvcnJlY3QnCiAgICAgIH0KICAgICAgY29uc29sZS5sb2coImFuc3dlckNsYXNzOiIrYW5zd2VyQ2xhc3MpCiAgICAgIHJldHVybiBhbnN3ZXJDbGFzcwogICAgfQoKICB9LAogIC8vIG1vdW50ZWQoKSB7CiAgLy8gICB0aGlzLnNodWZmbGVBbnN3ZXJzKCkKICAvLyB9Cn0K"},{"version":3,"sources":["QuestionBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"QuestionBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"question-box-container\">\n    <b-jumbotron>\n      <template v-slot:lead>\n          {{ currentQuestion.question }}\n        </template>\n        <hr class=\"my-4\">\n        <b-list-group>\n          <b-list-group-item \n            v-for=\"(answer, index) in shuffledAnswers\" \n            :key=\"index\"\n            @click=\"selectAnswer(index)\"  \n            :class=\"answerClass(index)\"\n            \n          >\n              {{ answer }}\n          </b-list-group-item>\n        </b-list-group>\n\n      <b-button \n        variant=\"primary\"\n        @click=\"submitAnswer\" \n        :disabled=\"selectedIndex === null || answered\"\n      >\n        Submit\n        </b-button>\n      <b-button @click=\"next\" variant=\"success\" href=\"#\">\n        Next\n      </b-button>\n    </b-jumbotron>\n  </div>\n</template>\n\n\n<script>\nimport _ from 'lodash'\nexport default {\n  props: {\n    currentQuestion: Object,\n    next: Function,\n    increment: Function,\n  },\n  data() {\n    return {\n      selectedIndex: null,\n      correctIndex: null,\n      shuffledAnswers: [],\n      answered: false\n    }\n  },\n  computed: {\n    answers() {\n      let answers = [...this.currentQuestion.incorrect_answers]\n      answers.push(this.currentQuestion.correct_answer)\n      return answers\n    }\n  },\n  watch: {\n    currentQuestion: {\n      immediate: true,\n      handler(){\n        this.selectedIndex = null\n        this.answered = false\n        this.shuffleAnswers()\n      }\n    }\n  },\n  methods: {\n    selectAnswer(index) {\n      this.selectedIndex = index\n      console.log(index)\n    },\n    shuffleAnswers() {\n      let answers = [...this.currentQuestion.incorrect_answers, this.currentQuestion.correct_answer]\n      this.shuffledAnswers = _.shuffle(answers)\n      this.correctIndex = this.shuffledAnswers.indexOf(this.currentQuestion.correct_answer)\n    },\n    submitAnswer(){\n      let isCorrect = false\n      console.log(this.currentQuestion.correct_answer)\n      if(this.selectedIndex === this.correctIndex){\n        isCorrect = true\n      }\n      this.answered = true\n      console.log(isCorrect)\n      this.increment(isCorrect)\n    },\n    answerClass(index){\n      let answerClass = ''\n      if (!this.answered && this.selectedIndex === index){\n        answerClass = 'selected'\n      } else if (this.answered && this.correctIndex === index) {\n        answerClass = 'correct'\n      } else if (this.answered && this.selectedIndex === index && this.correctIndex !== index) {\n        answerClass = 'incorrect'\n      }\n      console.log(\"answerClass:\"+answerClass)\n      return answerClass\n    }\n\n  },\n  // mounted() {\n  //   this.shuffleAnswers()\n  // }\n}\n</script>>\n\n\n<style scoped>\n  .list-group {\n    margin-bottom: 15px;\n  }\n  .list-group-item:hover {\n    background: #EEE;\n    cursor: pointer;\n  }\n  .btn {\n    margin-right: 20px;\n  }\n  .selected {\n    background-color: lightblue;\n  }\n  .correct {\n    background-color: lightgreen;\n  }\n  .incorrect {\n    background-color: red;\n  }\n\n</style>>"]}]}