{"remainingRequest":"/Users/jackw/work/temp/vue/quiz/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jackw/work/temp/vue/quiz/src/components/QuestionBox.vue?vue&type=style&index=0&id=62ab2b85&scoped=true&lang=css&","dependencies":[{"path":"/Users/jackw/work/temp/vue/quiz/src/components/QuestionBox.vue","mtime":1576047602261},{"path":"/Users/jackw/work/temp/vue/quiz/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jackw/work/temp/vue/quiz/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/jackw/work/temp/vue/quiz/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/jackw/work/temp/vue/quiz/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jackw/work/temp/vue/quiz/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5saXN0LWdyb3VwIHsKICBtYXJnaW4tYm90dG9tOiAxNXB4Owp9Ci5saXN0LWdyb3VwLWl0ZW06aG92ZXIgewogIGJhY2tncm91bmQ6ICNFRUU7CiAgY3Vyc29yOiBwb2ludGVyOwp9Ci5idG4gewogIG1hcmdpbi1yaWdodDogMjBweDsKfQouc2VsZWN0ZWQgewogIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Ymx1ZTsKfQouY29ycmVjdCB7CiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmVlbjsKfQouaW5jb3JyZWN0IHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7Cn0KCg=="},{"version":3,"sources":["QuestionBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"QuestionBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"question-box-container\">\n    <b-jumbotron>\n      <template v-slot:lead>\n          {{ currentQuestion.question }}\n        </template>\n        <hr class=\"my-4\">\n        <b-list-group>\n          <b-list-group-item \n            v-for=\"(answer, index) in shuffledAnswers\" \n            :key=\"index\"\n            @click=\"selectAnswer(index)\"  \n            :class=\"answerClass(index)\"\n            \n          >\n              {{ answer }}\n          </b-list-group-item>\n        </b-list-group>\n\n      <b-button \n        variant=\"primary\"\n        @click=\"submitAnswer\" \n        :disabled=\"selectedIndex === null || answered\"\n      >\n        Submit\n        </b-button>\n      <b-button @click=\"next\" variant=\"success\" href=\"#\">\n        Next\n      </b-button>\n    </b-jumbotron>\n  </div>\n</template>\n\n\n<script>\nimport _ from 'lodash'\nexport default {\n  props: {\n    currentQuestion: Object,\n    next: Function,\n    increment: Function,\n  },\n  data() {\n    return {\n      selectedIndex: null,\n      correctIndex: null,\n      shuffledAnswers: [],\n      answered: false\n    }\n  },\n  computed: {\n    answers() {\n      let answers = [...this.currentQuestion.incorrect_answers]\n      answers.push(this.currentQuestion.correct_answer)\n      return answers\n    }\n  },\n  watch: {\n    currentQuestion: {\n      immediate: true,\n      handler(){\n        this.selectedIndex = null\n        this.answered = false\n        this.shuffleAnswers()\n      }\n    }\n  },\n  methods: {\n    selectAnswer(index) {\n      this.selectedIndex = index\n      console.log(index)\n    },\n    shuffleAnswers() {\n      let answers = [...this.currentQuestion.incorrect_answers, this.currentQuestion.correct_answer]\n      this.shuffledAnswers = _.shuffle(answers)\n      this.correctIndex = this.shuffledAnswers.indexOf(this.currentQuestion.correct_answer)\n    },\n    submitAnswer(){\n      let isCorrect = false\n      console.log(this.currentQuestion.correct_answer)\n      if(this.selectedIndex === this.correctIndex){\n        isCorrect = true\n      }\n      this.answered = true\n      console.log(isCorrect)\n      this.increment(isCorrect)\n    },\n    answerClass(index){\n      let answerClass = ''\n      if (!this.answered && this.selectedIndex === index){\n        answerClass = 'selected'\n      } else if (this.answered && this.correctIndex === index) {\n        answerClass = 'correct'\n      } else if (this.answered && this.selectedIndex === index && this.correctIndex !== index) {\n        answerClass = 'incorrect'\n      }\n      console.log(\"answerClass:\"+answerClass)\n      return answerClass\n    }\n\n  },\n  // mounted() {\n  //   this.shuffleAnswers()\n  // }\n}\n</script>>\n\n\n<style scoped>\n  .list-group {\n    margin-bottom: 15px;\n  }\n  .list-group-item:hover {\n    background: #EEE;\n    cursor: pointer;\n  }\n  .btn {\n    margin-right: 20px;\n  }\n  .selected {\n    background-color: lightblue;\n  }\n  .correct {\n    background-color: lightgreen;\n  }\n  .incorrect {\n    background-color: red;\n  }\n\n</style>>"]}]}